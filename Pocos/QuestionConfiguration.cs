// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Pocos
{

    // Question
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class QuestionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Question>
    {
        public QuestionConfiguration()
            : this("dbo")
        {
        }

        public QuestionConfiguration(string schema)
        {
            ToTable("Question", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.QuestionText).HasColumnName(@"QuestionText").IsRequired().IsUnicode(false).HasColumnType("varchar(max)");
            Property(x => x.QuestionTypeId).HasColumnName(@"QuestionTypeID").IsRequired().HasColumnType("int");
            Property(x => x.RatingEffect).HasColumnName(@"RatingEffect").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(10);
            Property(x => x.QuestionHint).HasColumnName(@"QuestionHint").IsOptional().IsUnicode(false).HasColumnType("varchar(max)");
            Property(x => x.GuiId).HasColumnName(@"GuiID").IsOptional().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.QuestionType).WithMany(b => b.Questions).HasForeignKey(c => c.QuestionTypeId).WillCascadeOnDelete(false); // FK_Question_QuestionType
        }
    }

}
// </auto-generated>
