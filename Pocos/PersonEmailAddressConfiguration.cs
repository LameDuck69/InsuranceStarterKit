// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Pocos
{

    // PersonEmailAddress
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class PersonEmailAddressConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PersonEmailAddress>
    {
        public PersonEmailAddressConfiguration()
            : this("dbo")
        {
        }

        public PersonEmailAddressConfiguration(string schema)
        {
            ToTable("PersonEmailAddress", schema);
            HasKey(x => new { x.EmailAddressId, x.PersonId, x.EmailAddressTypeId });

            Property(x => x.EmailAddressId).HasColumnName(@"EmailAddressID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PersonId).HasColumnName(@"PersonID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailAddressTypeId).HasColumnName(@"EmailAddressTypeID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);

            // Foreign keys
            HasRequired(a => a.EmailAddress).WithMany(b => b.PersonEmailAddresses).HasForeignKey(c => c.EmailAddressId).WillCascadeOnDelete(false); // FK_PersonEmailAddress_EmailAddress
            HasRequired(a => a.EmailAddressType).WithMany(b => b.PersonEmailAddresses).HasForeignKey(c => c.EmailAddressTypeId).WillCascadeOnDelete(false); // FK_PersonEmailAddress_EmailAddressType
            HasRequired(a => a.Person).WithMany(b => b.PersonEmailAddresses).HasForeignKey(c => c.PersonId).WillCascadeOnDelete(false); // FK_PersonEmailAddress_Person
        }
    }

}
// </auto-generated>
