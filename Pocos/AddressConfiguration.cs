// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Pocos
{

    // Address
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class AddressConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Address>
    {
        public AddressConfiguration()
            : this("dbo")
        {
        }

        public AddressConfiguration(string schema)
        {
            ToTable("Address", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AddressLine1).HasColumnName(@"AddressLine1").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(60);
            Property(x => x.AddressLine2).HasColumnName(@"AddressLine2").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(60);
            Property(x => x.CityId).HasColumnName(@"CityID").IsRequired().HasColumnType("int");
            Property(x => x.CountyId).HasColumnName(@"CountyID").IsRequired().HasColumnType("int");
            Property(x => x.CountryId).HasColumnName(@"CountryID").IsRequired().HasColumnType("int");
            Property(x => x.PostCode).HasColumnName(@"PostCode").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(15);
            Property(x => x.SpatialLocation).HasColumnName(@"SpatialLocation").IsOptional().HasColumnType("geography");
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").IsRequired().HasColumnType("datetime");
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);

            // Foreign keys
            HasRequired(a => a.Country).WithMany(b => b.Addresses).HasForeignKey(c => c.CountryId).WillCascadeOnDelete(false); // FK_Address_Country
            HasRequired(a => a.County).WithMany(b => b.Addresses).HasForeignKey(c => c.CountyId).WillCascadeOnDelete(false); // FK_Address_County
            HasRequired(a => a.Town).WithMany(b => b.Addresses).HasForeignKey(c => c.CityId).WillCascadeOnDelete(false); // FK_Address_City
            HasMany(t => t.Policies).WithMany(t => t.Addresses).Map(m =>
            {
                m.ToTable("AddressOnPolicy", "dbo");
                m.MapLeftKey("AddressID");
                m.MapRightKey("PolicyID");
            });
        }
    }

}
// </auto-generated>
