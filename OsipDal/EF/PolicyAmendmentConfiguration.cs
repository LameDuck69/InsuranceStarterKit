// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace OsipDal.EF
{

    // PolicyAmendment
    [System.CodeDom.Compiler.GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.19.1.0")]
    public class PolicyAmendmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PolicyAmendment>
    {
        public PolicyAmendmentConfiguration()
            : this("dbo")
        {
        }
 
        public PolicyAmendmentConfiguration(string schema)
        {
            ToTable(schema + ".PolicyAmendment");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName("ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PolicyId).HasColumnName("PolicyID").IsRequired().HasColumnType("int");
            Property(x => x.AmendmentDate).HasColumnName("AmendmentDate").IsRequired().HasColumnType("date");
            Property(x => x.AmendmentTypeId).HasColumnName("AmendmentTypeID").IsRequired().HasColumnType("int");
            Property(x => x.PreviousPremium).HasColumnName("PreviousPremium").IsRequired().HasColumnType("decimal").HasPrecision(4,2);
            Property(x => x.AmmendedById).HasColumnName("AmmendedByID").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.Policy).WithMany(b => b.PolicyAmendments).HasForeignKey(c => c.PolicyId); // FK_PolicyAmendment_Policy
            HasRequired(a => a.PolicyAmentmentType).WithMany(b => b.PolicyAmendments).HasForeignKey(c => c.AmendmentTypeId); // FK_PolicyAmendment_PolicyAmentmentType
            HasMany(t => t.Questions).WithMany(t => t.PolicyAmendments).Map(m => 
            {
                m.ToTable("QuestionAmended", "dbo");
                m.MapLeftKey("PolicyAmendmentID");
                m.MapRightKey("QuestionID");
            });
        }
    }

}
// </auto-generated>
