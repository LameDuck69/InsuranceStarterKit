// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace OsipDal.EF
{

    // RatingFactorOnPolicy
    [System.CodeDom.Compiler.GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.19.1.0")]
    public class RatingFactorOnPolicyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RatingFactorOnPolicy>
    {
        public RatingFactorOnPolicyConfiguration()
            : this("dbo")
        {
        }
 
        public RatingFactorOnPolicyConfiguration(string schema)
        {
            ToTable(schema + ".RatingFactorOnPolicy");
            HasKey(x => new { x.AnswerId, x.PolicyId, x.RatingFactorId });

            Property(x => x.RatingFactorId).HasColumnName("RatingFactorID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PolicyId).HasColumnName("PolicyID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AnswerId).HasColumnName("AnswerID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);

            // Foreign keys
            HasRequired(a => a.Answer).WithMany(b => b.RatingFactorOnPolicies).HasForeignKey(c => c.AnswerId); // FK_RatingFactorOnPolicy_Answer
            HasRequired(a => a.Policy).WithMany(b => b.RatingFactorOnPolicies).HasForeignKey(c => c.PolicyId); // FK_RatingFactorOnPolicy_Policy
            HasRequired(a => a.RatingFactor).WithMany(b => b.RatingFactorOnPolicies).HasForeignKey(c => c.RatingFactorId); // FK_RatingFactorOnPolicy_RatingFactor
        }
    }

}
// </auto-generated>
