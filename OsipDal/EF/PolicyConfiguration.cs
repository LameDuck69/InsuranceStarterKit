// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace OsipDal.EF
{

    // Policy
    [System.CodeDom.Compiler.GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.19.1.0")]
    public class PolicyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Policy>
    {
        public PolicyConfiguration()
            : this("dbo")
        {
        }
 
        public PolicyConfiguration(string schema)
        {
            ToTable(schema + ".Policy");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName("ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PurchaserId).HasColumnName("PurchaserID").IsRequired().HasColumnType("int");
            Property(x => x.StartDate).HasColumnName("StartDate").IsRequired().HasColumnType("date");
            Property(x => x.DurationInDays).HasColumnName("DurationInDays").IsOptional().HasColumnType("int");
            Property(x => x.QuoteDate).HasColumnName("QuoteDate").IsRequired().HasColumnType("date");
            Property(x => x.PolicyDefinitionId).HasColumnName("PolicyDefinitionID").IsRequired().HasColumnType("int");
            Property(x => x.Premium).HasColumnName("Premium").IsRequired().HasColumnType("decimal").HasPrecision(4,2);
            Property(x => x.PolicyAutoRenew).HasColumnName("PolicyAutoRenew").IsRequired().HasColumnType("bit");
            Property(x => x.SoldById).HasColumnName("SoldByID").IsRequired().HasColumnType("int");
            Property(x => x.SnailMail).HasColumnName("SnailMail").IsRequired().HasColumnType("bit");

            // Foreign keys
            HasRequired(a => a.PolicyDefinition).WithMany(b => b.Policies).HasForeignKey(c => c.PolicyDefinitionId); // FK_Policy_PolicyDefinition
        }
    }

}
// </auto-generated>
